Langkah 2: Ubah isi i18n.js seperti ini:
js
Salin
Edit
import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';

// Import file terpisah
import enAbout from '../locales/en/about.json';
import enNavbar from '../locales/en/navbar.json';
import enProjects from '../locales/en/projects.json';

import idAbout from '../locales/id/about.json';
import idNavbar from '../locales/id/navbar.json';
import idProjects from '../locales/id/projects.json';

const resources = {
  en: {
    about: enAbout,
    navbar: enNavbar,
    projects: enProjects,
  },
  id: {
    about: idAbout,
    navbar: idNavbar,
    projects: idProjects,
  },
};

i18n
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    resources,
    fallbackLng: 'en',
    ns: ['about', 'navbar', 'projects'], // daftar namespace
    defaultNS: 'about', // default kalau tidak disebut
    interpolation: {
      escapeValue: false,
    },
  });

export default i18n;

ðŸ”¥ Cara Pakai di Komponen:
Misalnya di AboutSection.jsx:

jsx
Salin
Edit
import { useTranslation } from 'react-i18next';

const { t } = useTranslation('about');

<h2>{t('title')}</h2>
<p>{t('paragraph')}</p>
Di FloatingNavbar.jsx:

jsx
Salin
Edit
const { t } = useTranslation('navbar');

<a href="#about">{t('about')}</a>
Kesimpulan:
âœ… Kamu perlu ubah i18n.js agar mendukung banyak file (namespace).
âœ… Ini jauh lebih scalable dan rapi dibanding semua ditaruh di satu file besar.

Kalau kamu ingin saya bantu buatin template lengkap folder locales atau struktur i18n.js dengan semua section kamu sekarang, tinggal bilang saja!